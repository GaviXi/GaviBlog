import{_ as n,p as a,q as s,Y as p}from"./framework-e1bed10d.js";const e={},o=p(`<h1 id="微信小程序路由传参" tabindex="-1"><a class="header-anchor" href="#微信小程序路由传参" aria-hidden="true">#</a> 微信小程序路由传参</h1><p>在微信小程序中，可以通过路由传参将数据传递给目标页面。以下是一种常见的方式：</p><p>在源页面中，使用 <code>wx.navigateTo</code> 或 <code>wx.redirectTo</code> 方法跳转到目标页面，并通过 URL 参数传递数据。示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;targetPage?param1=value1&amp;param2=value2&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在目标页面的 <code>onLoad</code> 生命周期函数中，可以通过 <code>options</code> 参数获取传递的参数。示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> param1 <span class="token operator">=</span> options<span class="token punctuation">.</span>param1<span class="token punctuation">;</span>
  <span class="token keyword">const</span> param2 <span class="token operator">=</span> options<span class="token punctuation">.</span>param2<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: value1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: value2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过在 URL 中添加参数，并在目标页面的 <code>onLoad</code> 函数中获取这些参数，就可以在页面之间传递数据。</p><p>注意：如果使用 <code>wx.redirectTo</code> 方法进行页面跳转，则目标页面会替换当前页面，而不会保留页面栈中的原页面。而使用 <code>wx.navigateTo</code> 方法进行跳转，则会将目标页面推入页面栈，返回时可回到原页面。根据你的具体需求选择适合的跳转方法。</p><p><strong>如果要传递的参数是对象呢？</strong></p><p>如果要传递的参数是一个对象，在微信小程序中可以通过以下方式进行路由传参：</p><p>在源页面中，使用 <code>wx.navigateTo</code> 或 <code>wx.redirectTo</code> 方法跳转到目标页面，并将对象参数转换为字符串形式进行传递。示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> objParam <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">key1</span><span class="token operator">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">key2</span><span class="token operator">:</span> <span class="token string">&#39;value2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> encodedParam <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>objParam<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;targetPage?param=&#39;</span> <span class="token operator">+</span> encodedParam
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在目标页面的 <code>onLoad</code> 生命周期函数中，通过 <code>options</code> 参数获取传递的参数，并将字符串参数解析为对象形式。示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> encodedParam <span class="token operator">=</span> options<span class="token punctuation">.</span>param<span class="token punctuation">;</span>
  <span class="token keyword">const</span> decodedParam <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>encodedParam<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decodedParam<span class="token punctuation">.</span>key1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: value1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decodedParam<span class="token punctuation">.</span>key2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: value2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例中，我们将要传递的对象参数先使用 <code>JSON.stringify()</code> 方法转换为字符串形式，并通过 <code>encodeURIComponent()</code> 进行编码。在目标页面的 <code>onLoad</code> 函数中，我们先使用 <code>decodeURIComponent()</code> 进行解码，再使用 <code>JSON.parse()</code> 方法将字符串解析为对象形式，以获取原始的参数对象。</p><p>注意，在实际使用中，对于复杂的对象参数，需要确保对象可以正确地被转换为字符串形式，并在目标页面中进行适当的解析和处理。</p>`,16),t=[o];function c(i,l){return a(),s("div",null,t)}const r=n(e,[["render",c],["__file","route_parameter_passing.html.vue"]]);export{r as default};
